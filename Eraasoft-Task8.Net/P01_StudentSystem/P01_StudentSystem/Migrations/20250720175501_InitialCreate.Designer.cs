// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

#nullable disable

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250720175501_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Learn the basics of C# programming language including syntax, OOP concepts, and basic data structures.",
                            EndDate = new DateOnly(2024, 5, 30),
                            Name = "C# Programming Fundamentals",
                            Price = 1500.00m,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "Build modern web applications using ASP.NET Core, Entity Framework, and MVC architecture.",
                            EndDate = new DateOnly(2024, 7, 31),
                            Name = "ASP.NET Core Web Development",
                            Price = 2500.00m,
                            StartDate = new DateOnly(2024, 4, 1)
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Master database design principles, SQL queries, and database optimization techniques.",
                            EndDate = new DateOnly(2024, 6, 15),
                            Name = "Database Design and SQL",
                            Price = 1800.00m,
                            StartDate = new DateOnly(2024, 3, 15)
                        },
                        new
                        {
                            CourseId = 4,
                            EndDate = new DateOnly(2024, 7, 1),
                            Name = "JavaScript for Beginners",
                            Price = 1200.00m,
                            StartDate = new DateOnly(2024, 5, 1)
                        },
                        new
                        {
                            CourseId = 5,
                            Description = "Build interactive user interfaces using React, hooks, and modern JavaScript features.",
                            EndDate = new DateOnly(2024, 8, 31),
                            Name = "React Frontend Development",
                            Price = 2200.00m,
                            StartDate = new DateOnly(2024, 6, 1)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeWorksSubmission");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "https://example.com/ahmed-csharp-assignment1.zip",
                            ContentType = 2,
                            CourseId = 1,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 3, 15, 23, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "https://example.com/fatma-csharp-assignment1.pdf",
                            ContentType = 1,
                            CourseId = 1,
                            StudentId = 4,
                            SubmissionTime = new DateTime(2024, 3, 14, 20, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "https://example.com/sara-aspnet-project.zip",
                            ContentType = 2,
                            CourseId = 2,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 4, 20, 18, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 4,
                            Content = "https://example.com/youssef-web-app.zip",
                            ContentType = 2,
                            CourseId = 2,
                            StudentId = 5,
                            SubmissionTime = new DateTime(2024, 4, 22, 22, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 5,
                            Content = "https://example.com/ahmed-sql-queries.pdf",
                            ContentType = 1,
                            CourseId = 3,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 4, 1, 16, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 6,
                            Content = "https://example.com/sara-database-design.zip",
                            ContentType = 2,
                            CourseId = 3,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 4, 5, 14, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 7,
                            Content = "https://example.com/omar-js-calculator",
                            ContentType = 0,
                            CourseId = 4,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 5, 15, 19, 20, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 8,
                            Content = "https://example.com/omar-react-todo-app.zip",
                            ContentType = 2,
                            CourseId = 5,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 6, 20, 21, 10, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HomeworkId = 9,
                            Content = "https://example.com/youssef-react-portfolio.zip",
                            ContentType = 2,
                            CourseId = 5,
                            StudentId = 5,
                            SubmissionTime = new DateTime(2024, 6, 25, 23, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "C# Basics Video Tutorial",
                            ResourceType = 0,
                            Url = "https://example.com/csharp-basics-video"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 1,
                            Name = "C# Reference Guide",
                            ResourceType = 2,
                            Url = "https://example.com/csharp-reference.pdf"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 1,
                            Name = "OOP Concepts Presentation",
                            ResourceType = 1,
                            Url = "https://example.com/oop-presentation.pptx"
                        },
                        new
                        {
                            ResourceId = 4,
                            CourseId = 2,
                            Name = "ASP.NET Core Setup Guide",
                            ResourceType = 2,
                            Url = "https://example.com/aspnet-setup.pdf"
                        },
                        new
                        {
                            ResourceId = 5,
                            CourseId = 2,
                            Name = "MVC Architecture Video",
                            ResourceType = 0,
                            Url = "https://example.com/mvc-architecture-video"
                        },
                        new
                        {
                            ResourceId = 6,
                            CourseId = 3,
                            Name = "SQL Query Examples",
                            ResourceType = 3,
                            Url = "https://example.com/sql-examples"
                        },
                        new
                        {
                            ResourceId = 7,
                            CourseId = 3,
                            Name = "Database Design Principles",
                            ResourceType = 1,
                            Url = "https://example.com/db-design.pptx"
                        },
                        new
                        {
                            ResourceId = 8,
                            CourseId = 4,
                            Name = "JavaScript Fundamentals Video",
                            ResourceType = 0,
                            Url = "https://example.com/js-fundamentals"
                        },
                        new
                        {
                            ResourceId = 9,
                            CourseId = 5,
                            Name = "React Components Guide",
                            ResourceType = 2,
                            Url = "https://example.com/react-components.pdf"
                        },
                        new
                        {
                            ResourceId = 10,
                            CourseId = 5,
                            Name = "React Hooks Tutorial",
                            ResourceType = 0,
                            Url = "https://example.com/react-hooks-video"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateOnly(2000, 5, 15),
                            Name = "Ahmed Mohamed Ali",
                            PhoneNumber = "0123456789",
                            RegisteredOn = new DateTime(2024, 1, 15, 10, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateOnly(1999, 8, 22),
                            Name = "Sara Hassan Ibrahim",
                            PhoneNumber = "0198765432",
                            RegisteredOn = new DateTime(2024, 1, 20, 14, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Omar Khaled Mahmoud",
                            RegisteredOn = new DateTime(2024, 2, 1, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 4,
                            Birthday = new DateOnly(2001, 12, 3),
                            Name = "Fatma Adel Mostafa",
                            PhoneNumber = "0111222333",
                            RegisteredOn = new DateTime(2024, 2, 10, 16, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 5,
                            Birthday = new DateOnly(1998, 3, 10),
                            Name = "Youssef Tarek Ahmed",
                            PhoneNumber = "0155667788",
                            RegisteredOn = new DateTime(2024, 2, 15, 11, 20, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 5
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 5
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Navigation("HomeworkSubmissions");

                    b.Navigation("Resources");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Navigation("HomeworkSubmissions");

                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
