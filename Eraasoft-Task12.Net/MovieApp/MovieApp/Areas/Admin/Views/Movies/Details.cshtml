@model MovieApp.ViewModels.Admin.MovieDetailsVM
@{
    ViewData["Title"] = "Movie Details";
}

<div class="admin-page-header admin-fade-in">
    <h1 class="admin-page-title">Movie Details</h1>
    <div class="admin-btn-group">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="admin-btn admin-btn-primary admin-btn-sm">
            <i class="fas fa-edit me-1"></i> Edit
        </a>
        <a asp-action="Index" class="admin-btn admin-btn-outline admin-btn-sm">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>
</div>

<div class="row admin-fade-in-delay-1">
    <div class="col-md-4 mb-4">
        <div class="admin-card h-100">
            <div class="admin-card-header">
                <h5 class="m-0 admin-widget-title">Poster</h5>
            </div>
            <div class="admin-card-body text-center">
                @if (!string.IsNullOrEmpty(Model.PosterUrl))
                {
                    <img src="@Model.PosterUrl" alt="@Model.Title" class="img-fluid rounded" style="max-height: 400px;" />
                }
                else
                {
                    <div class="bg-dark d-flex align-items-center justify-content-center" style="height: 300px; border-radius: var(--admin-radius);">
                        <i class="fas fa-film fa-4x admin-text-muted"></i>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-8 mb-4">
        <div class="admin-card h-100">
            <div class="admin-card-header">
                <h5 class="m-0 admin-widget-title">Movie Information</h5>
            </div>
            <div class="admin-card-body">
                <h2 class="mb-3">@Model.Title</h2>
                
                <div class="row mb-4">
                    <div class="col-md-6">
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <span class="admin-text-muted">Category:</span>
                                <span class="ms-2">@Model.CategoryName</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Release Year:</span>
                                <span class="ms-2">@Model.ReleaseYear</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Duration:</span>
                                <span class="ms-2">@Model.DurationMinutes minutes</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Status:</span>
                                <span class="ms-2">
                                    @if (Model.Status == MovieApp.Models.MovieStatus.NowShowing)
                                    {
                                        <span class="admin-badge admin-badge-primary">Now Showing</span>
                                    }
                                    else
                                    {
                                        <span class="admin-badge admin-badge-success">Coming Soon</span>
                                    }
                                </span>
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <span class="admin-text-muted">Ticket Price:</span>
                                <span class="ms-2">$@Model.Price.ToString("F2")</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Total Tickets:</span>
                                <span class="ms-2">@Model.TotalTickets</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Reserved Tickets:</span>
                                <span class="ms-2">@Model.ReservedTickets</span>
                            </li>
                            <li class="mb-2">
                                <span class="admin-text-muted">Available Tickets:</span>
                                <span class="ms-2">@Model.AvailableTickets</span>
                            </li>
                        </ul>
                    </div>
                </div>
                
                <div class="mb-4">
                    <h5 class="mb-3">Description</h5>
                    <p>@Model.Description</p>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Images != null && Model.Images.Any())
{
    <div class="row admin-fade-in-delay-2">
        <div class="col-12 mb-4">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5 class="m-0 admin-widget-title">Movie Gallery</h5>
                </div>
                <div class="admin-card-body">
                    @{
                        var orderedImages = Model.Images.OrderBy(i => i.Order).ToList();
                    }

                    <div id="movieImageCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < orderedImages.Count; i++)
                            {
                                var image = orderedImages[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")" style="height: 400px;">
                                    <img src="@image.Path" class="d-block mx-auto h-100" style="object-fit: contain;" alt="Movie image">
                                </div>
                            }
                        </div>
                        
                        @* Only show carousel controls if there's more than one image *@
                        @if (orderedImages.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#movieImageCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#movieImageCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>
                    
                    @* Only show thumbnails if there's more than one image *@
                    @if (orderedImages.Count > 1)
                    {
                        <div class="d-flex justify-content-center mt-3 flex-wrap" id="thumbnailContainer" style="gap: 10px;">
                            @for (int i = 0; i < orderedImages.Count; i++)
                            {
                                var image = orderedImages[i];
                                <div class="thumbnail-item" data-slide-index="@i" style="width: 100px; height: 70px;">
                                    <img src="@image.Path" class="thumbnail-img @(i == 0 ? "active-thumbnail" : "")" 
                                         style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" 
                                         alt="Thumbnail" />
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<div class="row admin-fade-in-delay-2">
    <div class="col-md-6 mb-4">
        <div class="admin-card h-100">
            <div class="admin-card-header">
                <h5 class="m-0 admin-widget-title">Cinema Information</h5>
            </div>
            <div class="admin-card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="me-3 rounded-circle" style="width: 50px; height: 50px; background-color: rgba(10,132,255,0.15); display: flex; align-items: center; justify-content: center;">
                        <i class="fas fa-building admin-text-primary"></i>
                    </div>
                    <div>
                        <h5 class="mb-0">@(Model.CinemaName ?? "No Cinema Assigned")</h5>
                        <div class="small admin-text-muted">@(Model.CinemaCity ?? "")</div>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.CinemaName))
                {
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <span class="admin-text-muted">Location:</span>
                            <span class="ms-2">@Model.CinemaLocation</span>
                        </li>
                        <li class="mb-2">
                            <span class="admin-text-muted">Address:</span>
                            <span class="ms-2">@Model.CinemaAddress</span>
                        </li>
                        <li class="mb-2">
                            <span class="admin-text-muted">Phone:</span>
                            <span class="ms-2">@Model.CinemaPhone</span>
                        </li>
                        <li class="mb-2">
                            <span class="admin-text-muted">Email:</span>
                            <span class="ms-2">@Model.CinemaEmail</span>
                        </li>
                    </ul>
                    
                    <a asp-area="Admin" asp-controller="Cinemas" asp-action="Details" asp-route-id="@Model.CinemaId" class="admin-btn admin-btn-outline admin-btn-sm mt-3">
                        <i class="fas fa-info-circle me-1"></i> View Cinema
                    </a>
                }
                else
                {
                    <div class="alert" role="alert" style="background-color: rgba(10,132,255,0.1); color: var(--admin-text); border: 1px solid rgba(10,132,255,0.3); border-radius: var(--admin-radius-sm);">
                        No cinema has been assigned to this movie. Edit the movie to assign a cinema.
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-6 mb-4">
        <div class="admin-card h-100">
            <div class="admin-card-header">
                <h5 class="m-0 admin-widget-title">Cast</h5>
            </div>
            <div class="admin-card-body">
                @if (Model.Actors != null && Model.Actors.Any())
                {
                    <div class="row">
                        @foreach (var actor in Model.Actors)
                        {
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(actor.ProfileImagePath))
                                    {
                                        <img src="@actor.ProfileImagePath" alt="@actor.FullName" width="50" height="50" class="rounded-circle me-3" style="object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="me-3 rounded-circle" style="width: 50px; height: 50px; background-color: rgba(10,132,255,0.15); display: flex; align-items: center; justify-content: center;">
                                            <i class="fas fa-user admin-text-primary"></i>
                                        </div>
                                    }
                                    <div>
                                        <h6 class="mb-0">@actor.FullName</h6>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <a asp-area="Admin" asp-controller="Actors" asp-action="Index" class="admin-btn admin-btn-outline admin-btn-sm mt-2">
                        <i class="fas fa-users me-1"></i> Manage Actors
                    </a>
                }
                else
                {
                    <div class="alert" role="alert" style="background-color: rgba(10,132,255,0.1); color: var(--admin-text); border: 1px solid rgba(10,132,255,0.3); border-radius: var(--admin-radius-sm);">
                        No actors have been assigned to this movie. Edit the movie to assign actors.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const carousel = document.getElementById('movieImageCarousel');
            const thumbnails = document.querySelectorAll('.thumbnail-item');
            
            // Only initialize carousel functionality if there are multiple images
            if (carousel && thumbnails.length > 0) {
                // Initialize Bootstrap 5 carousel
                const carouselInstance = new bootstrap.Carousel(carousel);
                
                // Add click event to thumbnails
                thumbnails.forEach(function(thumbnail) {
                    thumbnail.addEventListener('click', function() {
                        const slideIndex = parseInt(this.getAttribute('data-slide-index'));
                        carouselInstance.to(slideIndex);
                        updateActiveThumbnail(slideIndex);
                    });
                });
                
                // Listen for carousel slide event
                carousel.addEventListener('slid.bs.carousel', function() {
                    // This event fires after the slide transition is completed
                    const activeSlide = carousel.querySelector('.carousel-item.active');
                    const slideIndex = Array.from(carousel.querySelectorAll('.carousel-item')).indexOf(activeSlide);
                    updateActiveThumbnail(slideIndex);
                });
                
                function updateActiveThumbnail(activeIndex) {
                    thumbnails.forEach(function(thumb, i) {
                        const img = thumb.querySelector('img');
                        if (i === activeIndex) {
                            img.classList.add('active-thumbnail');
                        } else {
                            img.classList.remove('active-thumbnail');
                        }
                    });
                }
            }
        });
    </script>
}