@using MovieApp.ViewModels
@model MovieDetailsVM
@{
    ViewData["Title"] = Model.Title;
    var availableTickets = Model.AvailableTickets;
    var ticketPercentage = Model.TotalTickets > 0 ? (double)availableTickets / Model.TotalTickets * 100 : 0;
    var percentage = Model.TotalTickets > 0 ? (double)Model.ReservedTickets / Model.TotalTickets * 100 : 0;
}

<!-- Movie Hero Section -->
<div class="movie-hero" style="background-image: url('@Model.PosterUrl');">
    <div class="container">
        <div class="movie-hero-content">
            <h1 class="movie-hero-title">@Model.Title</h1>
            <div class="movie-hero-meta">
                <span class="badge @(Model.Status == MovieStatus.NowShowing ? "badge-status-showing" : "badge-status-coming") fs-6">
                    @Model.Status.ToString().Replace("NowShowing", "Now Showing").Replace("ComingSoon", "Coming Soon")
                </span>
                <span><i class="fas fa-calendar-alt me-2"></i>@Model.ReleaseYear</span>
                <span><i class="fas fa-clock me-2"></i>@Model.DurationMinutes minutes</span>
                @if (!string.IsNullOrEmpty(Model.CategoryName))
                {
                    <span><i class="fas fa-tags me-2"></i>@Model.CategoryName</span>
                }
            </div>
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <p class="movie-hero-description">@Model.Description</p>
            }
            <div class="d-flex gap-3 mt-3">
                <span class="h3 text-warning mb-0">
                    <i class="fas fa-dollar-sign me-1"></i>@Model.Price
                </span>
                @if (!string.IsNullOrEmpty(Model.CinemaName))
                {
                    <span class="h5 mb-0 text-light">
                        <i class="fas fa-map-marker-alt me-2"></i>@Model.CinemaName
                    </span>
                }
            </div>
        </div>
    </div>
</div>

<!-- Movie Details Section -->
<div class="movie-details-section">
    <div class="container">
        <!-- Movie Stats -->
        <div class="movie-stats">
            <div class="row">
                <div class="col-md-3">
                    <div class="stat-item">
                        <span class="stat-value">@Model.TotalTickets</span>
                        <span class="stat-label">Total Seats</span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-item">
                        <span class="stat-value">@Model.ReservedTickets</span>
                        <span class="stat-label">Reserved</span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-item">
                        <span class="stat-value">@Model.AvailableTickets</span>
                        <span class="stat-label">Available</span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-item">
                        <span class="stat-value">@percentage.ToString("F0")%</span>
                        <span class="stat-label">Sold</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Movie Gallery/Carousel -->
        @if (Model.Images != null && Model.Images.Any())
        {
            <div class="movie-gallery-section mb-4">
                <div class="movie-details-card">
                    <h3 class="card-title mb-3">Movie Gallery</h3>
                    
                    @{
                        var orderedImages = Model.Images.OrderBy(i => i.Order).ToList();
                    }

                    <div id="movieImageCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < orderedImages.Count; i++)
                            {
                                var image = orderedImages[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")" style="height: 400px;">
                                    <img src="@image.Path" class="d-block mx-auto h-100" style="object-fit: contain;" alt="Movie image">
                                </div>
                            }
                        </div>
                        
                        @* Only show carousel controls if there's more than one image *@
                        @if (orderedImages.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#movieImageCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#movieImageCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>
                    
                    @* Only show thumbnails if there's more than one image *@
                    @if (orderedImages.Count > 1)
                    {
                        <div class="d-flex justify-content-center mt-3 flex-wrap" id="thumbnailContainer" style="gap: 10px;">
                            @for (int i = 0; i < orderedImages.Count; i++)
                            {
                                var image = orderedImages[i];
                                <div class="thumbnail-item" data-slide-index="@i">
                                    <img src="@image.Path" class="thumbnail-img @(i == 0 ? "active-thumbnail" : "")" alt="Thumbnail" />
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        <div class="row">
            <!-- Movie Information -->
            <div class="col-lg-8">
                <div class="movie-details-card mb-4">
                    <h3 class="card-title">Movie Information</h3>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <strong>Title:</strong> @Model.Title
                        </div>
                        <div class="col-md-6 mb-3">
                            <strong>Release Year:</strong> @Model.ReleaseYear
                        </div>
                        <div class="col-md-6 mb-3">
                            <strong>Duration:</strong> @Model.DurationMinutes minutes
                        </div>
                        <div class="col-md-6 mb-3">
                            <strong>Price:</strong> $@Model.Price
                        </div>
                        @if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            <div class="col-md-6 mb-3">
                                <strong>Category:</strong> 
                                <a asp-area="Public" asp-controller="Categories" asp-action="Details" asp-route-id="@Model.CategoryId">
                                    @Model.CategoryName
                                </a>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.CinemaName))
                        {
                            <div class="col-md-6 mb-3">
                                <strong>Cinema:</strong> @Model.CinemaName
                            </div>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mt-3">
                            <strong>Description:</strong>
                            <p class="mt-2">@Model.Description</p>
                        </div>
                    }
                </div>

                <!-- Cast Information -->
                @if (Model.Actors.Any())
                {
                    <div class="movie-details-card">
                        <h3 class="card-title">Cast</h3>
                        <div class="row">
                            @foreach (var actor in Model.Actors)
                            {
                                <div class="col-lg-6">
                                    <div class="actor-details-item">
                                        <img src="@actor.ProfileImagePath" alt="@actor.FullName" 
                                             class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                        <div>
                                            <h6 class="mb-1">
                                                <a asp-area="Public" asp-controller="Actors" asp-action="Details" asp-route-id="@actor.Id">
                                                    @actor.FullName
                                                </a>
                                            </h6>
                                            @if (!string.IsNullOrEmpty(actor.Bio))
                                            {
                                                <small>@(actor.Bio.Length > 50 ? actor.Bio.Substring(0, 50) + "..." : actor.Bio)</small>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Movie Poster -->
                <div class="card mb-4">
                    <img src="@Model.PosterUrl" class="card-img-top" alt="@Model.Title" style="height: 400px; object-fit: cover;">
                </div>

                <!-- Ticket Booking -->
                <div class="booking-card card mb-4">
                    <div class="card-body text-center">
                        <h5 class="card-title">Book Tickets</h5>
                        
                        @if (availableTickets > 0)
                        {
                            <p class="text-success">
                                <i class="fas fa-check-circle me-2"></i>
                                @availableTickets tickets available
                            </p>
                            <div class="d-grid">
                                <button class="btn btn-primary-custom btn-lg">
                                    <i class="fas fa-ticket-alt me-2"></i>
                                    Book Now - $@Model.Price
                                </button>
                            </div>
                        }
                        else
                        {
                            <p class="text-danger">
                                <i class="fas fa-times-circle me-2"></i>
                                Sold Out
                            </p>
                            <div class="d-grid">
                                <button class="btn btn-secondary" disabled>
                                    <i class="fas fa-ban me-2"></i>
                                    No Tickets Available
                                </button>
                            </div>
                        }

                        <div class="progress mt-3" style="height: 8px;">
                            <div class="progress-bar bg-danger" style="width: @((100 - ticketPercentage).ToString("F0"))%"></div>
                        </div>
                        <small class="text-muted mt-2 d-block">
                            @Model.ReservedTickets / @Model.TotalTickets tickets sold
                        </small>
                    </div>
                </div>

                <!-- Cinema Information -->
                @if (!string.IsNullOrEmpty(Model.CinemaName))
                {
                    <div class="cinema-card card">
                        <div class="card-body">
                            <h5 class="card-title">Cinema Details</h5>
                            <p><strong>@Model.CinemaName</strong></p>
                            @if (!string.IsNullOrEmpty(Model.CinemaLocation))
                            {
                                <p class="mb-2">
                                    <i class="fas fa-map-marker-alt me-2"></i>
                                    @Model.CinemaLocation
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.CinemaAddress))
                            {
                                <p class="mb-2">
                                    <i class="fas fa-home me-2"></i>
                                    @Model.CinemaAddress
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.CinemaCity))
                            {
                                <p class="mb-2">
                                    <i class="fas fa-city me-2"></i>
                                    @Model.CinemaCity
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.CinemaPhone))
                            {
                                <p class="mb-2">
                                    <i class="fas fa-phone me-2"></i>
                                    @Model.CinemaPhone
                                </p>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Back Button -->
        <div class="text-center mt-4">
            <a asp-area="Public" asp-controller="Movies" asp-action="Index" class="btn btn-outline-primary-custom">
                <i class="fas fa-arrow-left me-2"></i>Back to Movies
            </a>
        </div>
    </div>
</div>

<style>
    /* Thumbnail styling */
    .thumbnail-item {
        cursor: pointer;
        transition: all 0.2s ease;
        width: 100px;
        height: 70px;
        flex-shrink: 0;
        border-radius: 8px;
        overflow: hidden;
    }

    .thumbnail-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .thumbnail-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border: 2px solid transparent;
        transition: all 0.2s ease;
        opacity: 0.7;
        border-radius: 6px;
    }

    .thumbnail-img:hover {
        opacity: 0.9;
    }

    .active-thumbnail {
        border: 2px solid var(--primary-color) !important;
        opacity: 1 !important;
        box-shadow: 0 0 0 1px var(--primary-color);
    }
    
    /* Carousel styling */
    .carousel-control-prev,
    .carousel-control-next {
        background-color: rgba(0, 0, 0, 0.5);
        width: 10%;
        height: 20%;
        top: 40%;
        border-radius: 4px;
    }
    
    #movieImageCarousel {
        background-color: rgba(0, 0, 0, 0.03);
        border-radius: 8px;
    }
    
    #movieImageCarousel .carousel-item {
        border-radius: 8px;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const carousel = document.getElementById('movieImageCarousel');
            const thumbnails = document.querySelectorAll('.thumbnail-item');
            
            // Only initialize carousel functionality if there are multiple images
            if (carousel && thumbnails.length > 0) {
                // Initialize Bootstrap carousel
                const carouselInstance = new bootstrap.Carousel(carousel);
                
                // Add click event to thumbnails
                thumbnails.forEach(function(thumbnail) {
                    thumbnail.addEventListener('click', function() {
                        const slideIndex = parseInt(this.getAttribute('data-slide-index'));
                        carouselInstance.to(slideIndex);
                        updateActiveThumbnail(slideIndex);
                    });
                });
                
                // Listen for carousel slide event
                carousel.addEventListener('slid.bs.carousel', function() {
                    // This event fires after the slide transition is completed
                    const activeSlide = carousel.querySelector('.carousel-item.active');
                    const slideIndex = Array.from(carousel.querySelectorAll('.carousel-item')).indexOf(activeSlide);
                    updateActiveThumbnail(slideIndex);
                });
                
                function updateActiveThumbnail(activeIndex) {
                    thumbnails.forEach(function(thumb, i) {
                        const img = thumb.querySelector('img');
                        if (i === activeIndex) {
                            img.classList.add('active-thumbnail');
                        } else {
                            img.classList.remove('active-thumbnail');
                        }
                    });
                }
            }
        });
    </script>
}